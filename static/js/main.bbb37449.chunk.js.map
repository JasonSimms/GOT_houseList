{"version":3,"sources":["components/NavList.jsx","components/NewHouseDetails.jsx","components/NavPagination.jsx","Application.jsx","Landing/index.jsx","components/NotFound.jsx","serviceWorker.js","index.js"],"names":["ListGroup","propTypes","tag","PropTypes","oneOfType","func","string","flush","bool","className","cssModule","object","NavList","props","mappedList","houses","map","el","i","react_default","a","createElement","reactstrap_es","key","to","name","onClick","clicked","url","NewHouseDetails","thisHouse","house","mappedInfo","Object","keys","includes","lib","error","response","isLoading","onReload","message","params","reload","scope","data","striped","bordered","NavPagination","_this","this","aria-label","previous","pageRev","pageTo","next","ck","pageAdv","React","Component","Pagination","children","node","listClassName","size","listTag","PaginationItem","active","disabled","PaginationLink","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isLoaded","isNamed","selectedHouse","displayedHouse","apiPage","_clicked","bind","assertThisInitialized","_prepareDisplay","_getNames","_paginateNav","_paginateNavAdv","_paginateNavRev","_this2","Axios","get","concat","then","result","setState","_this3","_this$state","NavPagination_NavPagination","xs","components_NavList","components_NewHouseDetails","index","clickedHouse","find","obj","console","log","houseObj","_this4","Promise","resolve","reject","namedHouse","forEach","_loadJson","page","newPage","Link","NotFound","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","Switch","Route","exact","path","component","Landing","Application","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbb37449.chunk.js","sourcesContent":["import React from \"react\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nconst NavList = props => {\n  const mappedList = props.houses.map((el, i) => (\n    <ListGroupItem\n      // <li\n      key={i}\n      to={\"/\" + el.name}\n      onClick={() => props.clicked(el.url)}\n    >\n      {el.name}\n    </ListGroupItem>\n  ));\n  return (\n    <ListGroup>\n      {mappedList}\n    </ListGroup>\n  );\n};\n\nListGroup.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  // boolean to render list group items edge-to-edge in a parent container\n  flush: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\n\nexport default NavList;\n","import React from \"react\";\nimport { Table, Container } from \"reactstrap\";\nimport { Get } from \"react-axios\";\n\nconst NewHouseDetails = props => {\n  const thisHouse = props.house;\n  delete thisHouse[`url`];\n  // delete thisHouse[`name`];\n  const thisHouseKeys = Object.keys(thisHouse);\n\n  const mappedInfo = thisHouseKeys.map(el => {\n    if (thisHouse[el].includes(`https`)) {\n      // console.log(`GOT A URL!`)\n      return (\n          <Get url={\"\" + thisHouse[el]}>\n            {(error, response, isLoading, onReload) => {\n              if (error) {\n                return (\n                  <div>\n                    Something bad happened: {error.message}{\" \"}\n                    <button\n                      onClick={() => onReload({ params: { reload: true } })}\n                    >\n                      Retry\n                    </button>\n                  </div>\n                );\n              } else if (isLoading) {\n                return <div>Loading...</div>;\n              } else if (response !== null) {\n                return (\n                    <tr key={el}>\n                      <th scope=\"row\">{el}</th>\n                      <td>{response.data.name} </td>\n                    </tr>\n                );\n              }\n              return <div>Default message before request is made.</div>;\n            }}\n          </Get>\n      );\n    } else if (thisHouse[el] == \"\") {\n      return null;\n    } else {\n      return (\n        <tr key={el}>\n          <th scope=\"row\">{el}</th>\n          <td>{props.house[el]}</td>\n        </tr>\n      );\n    }\n  });\n  return (\n    <Container>\n      <h2>House Details</h2>\n      <Table striped bordered>\n        <thead />\n        <tbody>{mappedInfo}</tbody>\n      </Table>\n    </Container>\n  );\n};\n\nexport default NewHouseDetails;\n","import React from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nexport default class NavPagination extends React.Component {\n  render() {\n    return (\n      <Pagination \n      aria-label=\"Page navigation example\"\n      >\n        <PaginationItem>\n          <PaginationLink\n            previous\n                   onClick={() => this.props.pageRev()}\n          />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink  onClick={() => this.props.pageTo(1)}>\n            1\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink  onClick={() => this.props.pageTo(2)}>\n            2\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink  onClick={() => this.props.pageTo(3)}>\n            3\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink  onClick={() => this.props.pageTo(4)}>\n            4\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink  onClick={() => this.props.pageTo(5)}>\n            5\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink  onClick={() => this.props.pageTo(6)}>\n            6\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink  onClick={() => this.props.pageTo(7)}>\n            7\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink  onClick={() => this.props.pageTo(8)}>\n            8\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink  onClick={() => this.props.pageTo(9)}>\n            9\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem />\n        <PaginationItem>\n          <PaginationLink next ck={() => this.props.pageAdv()} />\n        </PaginationItem>\n      </Pagination>\n    );\n  }\n}\n\nPagination.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  listTag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  \"aria-label\": PropTypes.string\n};\n\nPaginationItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n};\n\nPaginationLink.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  next: PropTypes.bool,\n  previous: PropTypes.bool,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  \"aria-label\": PropTypes.string\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\n\n\n\n\nimport NavList from \"./components/NavList\";\n// import Details from \"./components/HouseDetails\";\nimport Details from \"./components/NewHouseDetails\";\n\nimport NavPagination from \"./components/NavPagination\";\nimport Axios from \"axios\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      isNamed: false,\n      selectedHouse: null,\n      displayedHouse: null,\n      houses: [],\n      apiPage: 1\n    };\n    this._clicked = this._clicked.bind(this);\n    this._prepareDisplay = this._prepareDisplay.bind(this);\n    this._getNames = this._getNames.bind(this);\n    this._paginateNav = this._paginateNav.bind(this);\n    this._paginateNavAdv = this._paginateNavAdv.bind(this);\n    this._paginateNavRev = this._paginateNavRev.bind(this);\n  }\n  componentDidMount() {\nAxios.get(`https://www.anapioficeandfire.com/api/houses?page=${this.state.apiPage}&pageSize=50`)\n.then(\n      result => {\n        this.setState({\n          isLoaded: true,\n          houses: result.data\n        });\n      },\n      error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    );\n  }\n  componentWillUpdate() {\n    Axios.get(`https://www.anapioficeandfire.com/api/houses?page=${this.state.apiPage}&pageSize=50`)\n    .then(\n          result => {\n            this.setState({\n              isLoaded: true,\n              houses: result.data\n            });\n          },\n          error => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        );\n      }\n  render() {\n   \n\n\n\n\n    const { error, isLoaded, houses } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      // console.log(this.state.houses.length);\n      return (\n        <Container>\n          <Row>\n            <NavPagination\n              pageTo={this._paginateNav}\n              pageAdv={this._paginateNavAdv}\n              pageRev={this._paginateNavRev}\n            />\n          </Row>\n          <Row>\n            <Col xs=\"4\" className=\"nav-list\">\n              <NavList houses={this.state.houses} clicked={this._clicked} />\n            </Col>\n            <Col xs=\"8\" className=\"house-details\">\n              {this.state.isNamed && (\n                <Details house={this.state.displayedHouse} />\n              )}\n            </Col>\n          </Row>\n        </Container>\n      );\n    }\n  }\n\n  _clicked(index) {\n    // console.log(\"clicked: \", index);\n    let clickedHouse = this.state.houses.find(obj => obj.url === index);\n    this.setState({ displayedHouse: clickedHouse, isNamed: true });\n    // this._getNames(clickedHouse).then(res =>\n    //   // console.log(`rezzed`,res)\n    //   this.setState({displayedHouse: res, isNamed: true})\n\n    //   )\n\n    // CONSIDER USING UNDERSCORE.js to facilitate backward compatabilty\n    // var obj = _.find(objArray, function (obj) { return obj.id === 3; });\n  }\n\n  _prepareDisplay() {\n    console.log(`prepareDisplay->`, this.state.selectedHouse);\n    this._getNames(this.state.selectedHouse).then(console.log(`done`));\n  }\n\n  _getNames(houseObj) {\n    return new Promise((resolve, reject) => {\n      let namedHouse = houseObj;\n      delete namedHouse[`url`];\n      Object.keys(namedHouse).forEach(key => {\n        if (namedHouse[key].includes(`https`)) {\n          console.log(`fetching something`);\n          this._loadJson(namedHouse[key]).then(\n            result => (namedHouse[key] = result.name)\n          );\n        }\n      });\n      resolve(namedHouse);\n    });\n  }\n\n\n  _paginateNav(page) {\n    this.setState({ apiPage: page });\n    console.log(this.state.apiPage);\n  }\n\n  _paginateNavAdv() {\n    let newPage = this.state.apiPage;\n    if (newPage < 9) newPage += 1;\n    this.setState({ apiPage: newPage });\n    console.log(this.state.apiPage);\n  }\n\n  _paginateNavRev() {\n    let newPage = this.state.apiPage;\n    if (newPage > 1) newPage -= 1;\n    this.setState({ apiPage: newPage });\n    console.log(this.state.apiPage);\n  }\n}\n\nexport default App;\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nconst index = () => {\n    return (\n        <div className=\"container landing\">\n            <div className=\"intro\">\n                <h1 className=\"title\">Welcome to Game of Thrones House List by Jason Simms</h1>\n                <h3 className=\"subtitle\">A ReactJS challenge for Piet.</h3>\n                <Link to=\"/main\">\n                    <button className=\"button\">See all GOT Houses</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default index","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <div className=\"container\">\n            <h1>Not found!</h1>\n        </div>\n    )\n}\n\nexport default NotFound","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\nimport Application from './Application';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport Landing from './Landing'\nimport NotFound from './components/NotFound'\n\n\n\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<BrowserRouter>\n<div>\n\n<Switch>\n               <Route exact path=\"/\" component={Landing} />\n                <Route path=\"/main\" component={Application} />\n                <Route component={NotFound} />\n            </Switch>\n</div>\n\n</BrowserRouter>\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}